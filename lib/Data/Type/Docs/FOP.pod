=head1 NAME

Data::Type::Doc::FOP - frequently occuring problems

=head1 DESCRIPTION

FAQs are only the things asked by users who have overcome their motivation-curve to post a question. FOPs are things the author extracts from these questions (and one day will solve) or suffers himself quite often, but is not willing to change it in near future.

=head1 FOPs

=head2 A function doesn't work. Somehow the try catch block isn't entered.

=head3 Solution

Was silly ';' missing after catch block ! This is a FOP with the L<Error> module syntax sugar.    

=head3 Example
 
 try
 {
 }
 catch Error with
 {
 }

will fail ! Because the final ; is missing.
  
 ..

 catch Error with
 {
 };

is the correct syntax.

[Note] Visit the L<Error> module pod.

=head2 Datatypes not exported. Misleading perl complains.

=head3 Solution

 Check for typos or whether you loaded the required collections for that type.

  use Data::Type qw(:all +BIO);

   shift;

   print "no dna" if isnt BIO::DNA;

=head3 Example

 Use of inherited AUTOLOAD for non-method Data::Type::VARCHAR() is deprecated at test.pl line 91, <DATA> line 4454.
 Can't locate class method 'Data::Type::VARCHAR' via package 'Data::Type' at test.pl line 91"

=head3 Problem

C<codegen()> isnt generating the proxy sub and the datatype name isnt exported. Check all naming for typos and correct loading of the collection. 

[Note] As I<ultima ratio> one could set C<Data::Type::DEBUG> to true and skim through the (still incohorent) output.


=head1 CONTACT

Sourceforge L<http://sf.net/projects/datatype> is hosting a project dedicated to this module. And I enjoy receiving your comments/suggestion/reports also via L<http://rt.cpan.org> or L<http://testers.cpan.org>. 

=head1 AUTHOR

Murat Uenalan, <muenalan@cpan.org>

